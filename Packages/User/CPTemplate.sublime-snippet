<snippet>
	<content><![CDATA[
#include"bits/stdc++.h"

using namespace std;

#define ll long long int
#define INF INT_MAX
#define _INF INT_MIN
#define M 1000000007
#define endl '\n'
#define fi(a,n) for(ll i=a;i<n;i++)
#define fj(a,n) for(ll j=a;j<n;j++)
#define fauto(a) for(auto it:a)
#define pb(n) push_back(n)
#define pf(n) push_front(n)
#define mp(a,b) make_pair(a,b)
#define xx first
#define yy second
#define max_32bit 4294967295

//Parity of n __builtin_parity(n)
//Number of set bits __builtin_popcount(n)

ll power10(ll n)
{
    ll f=1;
    for(ll i=1;i<=n;i++)
        f*=10;
    return f;
}

bool sortbysec(const pair<ll,ll> &a,
              const pair<ll,ll> &b)
{
    return (a.second < b.second);
}


bool PoT(ll n)
{
   if(n==0)
   return false;

   return (ceil(log2(n)) == floor(log2(n)));
}

ll XNOR(ll a, ll b)
{
    ll x=log2(max(a,b))+1;
    ll tmp=(1<<x)-1;
    return tmp-(a^b);
}
 

int main()
{
    #ifdef HOME 
        freopen("ip.txt", "r", stdin); 
        freopen("op.txt", "w", stdout); 
    #endif 

    std::ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    clock_t start,end;
    start=clock();
    ll t=1;
    cin>>t;
    for(ll _=0;_<t;_++)
    {
        ${1:}


        // cout<<"Case #"<<_+1<<": "<<endl<<flush;
    }
    end=clock();

    #ifdef HOME 
        cerr<<fixed << double(end-start)/double(CLOCKS_PER_SEC)<< setprecision(5)<<endl; 
    #endif 

    // cout<<endl<<fixed << double(end-start)/double(CLOCKS_PER_SEC)<< setprecision(5)<<endl;;
    return 0;

}


]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<!-- <tabTrigger>hello</tabTrigger> -->
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
	<tabTrigger>CP Template</tabTrigger>

</snippet>
